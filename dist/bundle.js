(()=>{"use strict";class e{constructor(){this.canvas=document.querySelector(".canvas"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight-144,this.board=this.canvas.getContext("2d"),this.eachColor=document.querySelectorAll(".color"),this.colorsContainer=document.querySelector(".colors"),this.colorPicker=document.querySelector(".color_picker"),this.clearPageBtn=document.querySelector(".delete"),this.eraserBtn=document.querySelector(".erase"),this.boldnessInput=document.querySelector(".boldness input"),this.boldnessNumber=document.querySelector(".boldness p")}removeColorActiveClass(){this.eachColor.forEach((e=>{e.classList.remove("active")}))}listenForColorClicks(e){this.colorsContainer.addEventListener("click",(function(s){if(!s.target.classList.contains("color"))return;s.target.closest(".colors").querySelectorAll(".color").forEach((e=>{e.classList.remove("active")})),s.target.classList.add("active");const t=s.target.dataset.color;e(t)}))}listenClearPageClick(e){this.clearPageBtn.addEventListener("click",e)}listenEraserClick(e){this.eraserBtn.addEventListener("click",e)}listenColorPickerSelection(e){this.colorPicker.addEventListener("change",(()=>{e(this.colorPicker.value)}))}get canvasEl(){return this.canvas}get boardEl(){return this.board}get boldnessInputValue(){return this.boldnessInput.value}setBoldnessInputNum(e){this.boldnessNumber.textContent=e}listenBoldnessInputChange(e){this.boldnessInput.addEventListener("input",e)}listenMouseDown(e){this.canvas.addEventListener("mousedown",(s=>{e(s)}))}listenMouseUp(e){this.canvas.addEventListener("mouseup",e)}listenMouseMove(e){this.canvas.addEventListener("mousemove",(s=>{e(s)}))}}class s{constructor(e,s){this.model=e,this.view=s}init(){this.changeBoldness(),this.viewEventListeners()}changeBoldness(){this.view.listenBoldnessInputChange((()=>{const e=this.view.boldnessInputValue;this.model.changeLineBoldness(e),this.view.setBoldnessInputNum(e)}))}viewEventListeners(){this.view.listenMouseDown((e=>{this.model.startDrawing(e)})),this.view.listenMouseUp((()=>{this.model.finishDrawing()})),this.view.listenMouseMove((e=>{this.model.drawing(e,this.view.boardEl)})),this.view.listenForColorClicks((e=>{this.model.setColor(e)})),this.view.listenColorPickerSelection((e=>{this.model.setColor(e)})),this.view.listenClearPageClick((()=>{this.model.clearPage(this.view.boardEl,this.view.canvasEl)})),this.view.listenEraserClick((()=>{this.model.setColor("#fff"),this.view.removeColorActiveClass()}))}}class t{constructor(){this.color="#111",this.boldness=1,this.isDrawing=!1,this.prevX=0,this.prevY=0}changeLineBoldness(e){return this.boldness=e,this.boldness}setColor(e){this.color=e}startDrawing(e){this.isDrawing=!0,this.prevX=e.offsetX,this.prevY=e.offsetY}finishDrawing(){this.isDrawing=!1}drawing(e,s){if(!this.isDrawing)return;let t=e.offsetX,i=e.offsetY;s.beginPath(),s.moveTo(this.prevX,this.prevY),s.lineTo(t,i),s.strokeStyle=this.color,s.lineWidth=this.boldness,s.lineCap="round",s.stroke(),s.closePath(),this.prevX=t,this.prevY=i}clearPage(e,s){e.clearRect(0,0,s.width,s.height)}}window.addEventListener("DOMContentLoaded",(function(){const i=new t,o=new e;new s(i,o).init()}))})();